@model IEnumerable<Fedco.PHED.Agent.management.Models.UserTransaction>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@if (ViewBag.UserTypeId == 1)
{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
else
{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Scripts.Render("~/bundles/dataTables", "~/bundles/tableTools")

<div class="btn-group btn-breadcrumb" style="margin-bottom:5px">
    @if ((int)Session["UserTypeId"] == 1)
    {
        <a href="@Url.Action("Index", "Admin")" class="btn btn-default"><i class="glyphicon glyphicon-home"></i></a>
    }
    else
    {
        <a href="@Url.Action("Home", "Account")" class="btn btn-default"><i class="glyphicon glyphicon-home"></i></a>
    }

    <a href="#" class="btn btn-default">Transactions</a>

</div>
<div style="width:99%">
    

    <div class='insideRow'>
        <div class="transeditor-label">
            <span id="date-label-from" class="date-label">From: </span>
            <input class="date_range_filter date" type="text" id="datepicker_from" />

            <span id="date-label-from" class="date-label">To: </span>
            <input class="date_range_filter date" type="text" id="datepicker_to" />
            <div class='small_btn_bg '>
                @Html.ActionLink("Add", "Create", "AED", null, new { @class = "globalrolelink" })<span class='add_icon'></span>
            </div>
        </div>
        <div class="transeditor-label">
           
        </div>
       
    </div>
    <table class="table" id="agentTable">
        <thead>
            <tr>
                <th>
                    Date
                </th>
                <th>
                    Stat
                </th>
                <th>
                    Account/MeterNumber
                </th>
                <th>
                    Consumer Number
                </th>
                <th>
                    Agent Code
                </th>
                <th>
                    Agent Name
                </th>
                <th>
                    Debit
                </th>
                <th>
                    Credit
                </th>
                <th>
                    Commission
                </th>
                <th>
                    Amount Before
                </th>
                <th>
                    Amount After
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in ViewBag.userTransactions)
            {
                <tr>
                    <td>
                     
                        @Convert.ToDateTime(@item.TransactionDateTime).ToString("MM/dd/yyyy")
                    </td>
                    <td>
                        @item.Reason
                    </td>
                    <td></td>
                    <td>
                        @item.ConsumerNumber
                    </td>
                    <td>
                        @item.AgentCode
                    </td>
                    <td>
                        @item.AgentName
                    </td>
                    <td>
                        @if (@item.TransactionType == 1)
                        {
                            <span>@Math.Round(0.0, 2)</span>
                        }
                        else
                        {
                            <span>@Math.Round(@item.TransactionAmount, 2)</span>
                        }
                    </td>
                    <td>
                        @if (@item.TransactionType == 1)
                        {
                            <span>@Math.Round(@item.TransactionAmount, 2)</span>
                        }
                        else
                        {
                            <span>@Math.Round(0.0, 2)</span>
                        }

                    </td>
                    <td>
                        @Math.Round(item.CommissionAmount, 2)
                    </td>
                    <td>
                        @Math.Round(item.OpeningBalance, 2)
                    </td>
                    <td>
                        @Math.Round(item.ClosingBalance, 2)
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>


<script src="~/Scripts/jquery.dataTables.min.js"></script>
<script src="~/Scripts/dataTables.bootstrap4.min.js"></script>
<script src="~/Scripts/dataTables.buttons.min.js"></script>
<script src="~/Scripts/buttons.bootstrap4.min.js"></script>
<script src="~/Scripts/jszip.min.js"></script>
<script src="~/Scripts/pdfmake.min.js"></script>
<script src="~/Scripts/vfs_fonts.js"></script>
<script src="~/Scripts/buttons.html5.min.js"></script>
<script src="~/Scripts/buttons.print.min.js"></script>

<link rel="stylesheet" href="~/Content/dataTables.bootstrap4.min.css" />
<script type="text/javascript">
    $(function () {


        $.noConflict();





        var table = $('#agentTable').DataTable({
            lengthChange: false,
            buttons: ['excel', 'pdf', 'pageLength'],
            "scrollX": true,
            "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]]
        });

        table.buttons().container()
            .appendTo('#agentTable_wrapper .col-md-6:eq(0)');

        // Date range filter
        minDateFilter = "";
        maxDateFilter = "";

        $.fn.dataTableExt.afnFiltering.push(
            function (oSettings, aData, iDataIndex) {
                if (typeof aData._date == 'undefined') {
                    aData._date = new Date(aData[0]).getTime();
                }


                if (aData._date < minDateFilter || aData._date > maxDateFilter) {
                        
                        return false;
                    }
                



                return true;
            }
        );


        $("#datepicker_from").datepicker({
            showOn: "both",
            buttonImage: '@Url.Content("~/Images/calendar.png")',
            buttonImageOnly: true,
            changeYear: true,
            changeMonth: true,
            buttonText: "",
            "onSelect": function (date) {
                minDateFilter = new Date(date).getTime();
                table.draw();
            }
        }).keyup(function () {
            minDateFilter = new Date(this.value).getTime();
            table.draw();
            });

          $("#datepicker_to").datepicker({
            showOn: "both",
            buttonImage: '@Url.Content("~/Images/calendar.png")',
            buttonImageOnly: true,
            changeYear: true,
            changeMonth: true,
            buttonText: "",
            "onSelect": function (date) {
                maxDateFilter = new Date(date).getTime();
                table.draw();
            }
        }).keyup(function () {
            maxDateFilter = new Date(this.value).getTime();
            table.draw();
        });

          var currentDate = new Date();
          
          $("#datepicker_from").datepicker("setDate", currentDate.getDate() - 240);
          $("#datepicker_to").datepicker("setDate", currentDate);
          minDateFilter = new Date().setDate(currentDate.getDate() - 240);
          maxDateFilter = new Date().setDate(currentDate);
          table.draw();
    });

</script>

